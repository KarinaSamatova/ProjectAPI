plugins {
    id 'java'
    id "io.freefair.lombok" version "8.4"
    id "io.qameta.allure" version "2.11.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.12.1'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.11.0'



}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register("myTags", Test.class){
    testLogging {
        events "passed", "skipped", "failed"
    }
    String fullTags = System.getProperty("customTags")
    if (fullTags != null){
        String[] tags = fullTags.split(",")
        useJUnitPlatform{
            for (String tag: tags){
                includeTags.add(tag)
            }
        }
    }
}